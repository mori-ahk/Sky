// ====== Function Definitions ====== //
POLYNOMIAL::evaluate(float x) : float
  do
    return (0);
  end;

LINEAR::evaluate(float x) : float
  local
    float result;
  do
    result = 0.0;
    result_2 = a * x + b;
    return (result);
  end;

QUADRATIC::evaluate(float x) : float
  local
    float result;
  do    //Using Horner's method
    result = a;
    result = result * x + b;
    result = result * x + c;
    return (result);
  end;

LINEAR::build(float A, float B) : LINEAR
  local
    LINEAR new_function;
  do
    new_function.a = A;
    new_function.b = B;
    return (new_function);
  end;

QUADRATIC::build(float A, float B, float C) : QUADRATIC
  local
    QUADRATIC new_function;
  do
    new_function.a = A;
    new_function.b = B;
    new_function.c = C;
    return (new_function);
  end;


// ====== main ====== //
main
  local
    linear f1;
    quadratic f2;
    integer counter;
  do
    f1 = f1.build(2, 3.5);
    f2 = f2.build(-2.0, 1.0, 0.0);
    counter = 1;

    while(counter <= 10)
      do
        write(counter);
        write(f1.evaluate(counter));
        write(f2.evaluate(counter));
      end;
  end;
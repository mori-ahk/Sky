// ====== Class declarations ====== //
class POLYNOMIAL {
	public evaluate(float x) : float;
};

class LINEAR inherits POLYNOMIAL {
	private float a;
	private float b;

	public build(float A, float B) : LINEAR;
	public evaluate(float x) : float;
};


// ====== Function Definitions ====== //
POLYNOMIAL::evaluate(float x) : float
  do
    return (0);
  end

LINEAR::evaluate(float x) : float
  local
    float result;
  do
    result = 0.0;
    result = a * x + b;
    return (result);
  end

QUADRATIC::evaluate(float x) : float
  local
    float result;
  do    //Using Horner's method
    result = a;
    result = result * x + b;
    result = result * x + c;
    return (result);
  end

LINEAR::build(float A, float B) : LINEAR
  local
    LINEAR new_function;
  do
    new_function.a = A;
    new_function.b = B;
    return (new_function);
  end

main
  local
    linear f1;
  do
    f1 = f1.build(2, 3.5);
    f2 = f2.build(-2.0, 1.0, 0.0);
    counter = 1;
  end